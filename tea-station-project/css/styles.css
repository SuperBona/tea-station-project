/* 
===========
fonts
===========
 */

@import url("https://fonts.googleapis.com/css2?family=Catamaran&family=Grand+Hotel&display=swap");

/* prima di procedere inserisco segli stili globali, delle variabili di base, per dare già una sorta di struttura e comodità per il loro facile riutilizzo,
anche su progetti differenti, basta che li copio e li reinserisco */

/* 
===========
Variables
===========
*/
:root {
  --clr-primary: #678e3e;
  --clr-primary-light: #beed8c;
  --clr-grey-1: #102a42;
  --clr-grey-5: #617d98;
  --clr-grey-10: #f1f5f8;
  --clr-white: #fff;
  --ff-primary: "Catamaran", sans-serif;
  --ff-secondary: "Grand Hotel", cursive;
  --transition: all 0.3s linear;
  --spacing: 0.25rem;
  --radius: 0.5rem;
}

/* 
==========================
Stili globali per schermi più piccoli sotto 800px
==========================
*/

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: var(--ff-primary);
  background-color: var(--clr-white);
  color: var(--clr-grey-1);
  line-height: 1.5;
  /* per schermi piccoli, font-size */
  font-size: 0.875rem;
}

a {
  text-decoration: none;
}

img {
  width: 100%;
  /* per non avere l'underline */
  display: block;
}

h1,
h2,
h3,
h4 {
  letter-spacing: var(--spacing);
  text-transform: capitalize;
  line-height: 1.25;
  margin-bottom: 0.75rem;
}

h1 {
  font-size: 3rem;
}
h2 {
  font-size: 2rem;
}
h3 {
  font-size: 1.5rem;
}
h4 {
  font-size: 0.875rem;
}

p {
  margin-bottom: 1.25rem;
}

/* 
===========
Media Query
===========
*/
/* schermi grandi sopra 800px */
@media screen and (min-width: 800px) {
  h1 {
    font-size: 4rem;
  }
  h2 {
    font-size: 2.5rem;
  }
  h3 {
    font-size: 2rem;
  }
  h4 {
    font-size: 1rem;
  }
  body {
    font-size: 1rem;
  }
  h1,
  h2,
  h3,
  h4 {
    line-height: 1;
  }
}

/* more global css */
.btn {
  text-transform: uppercase;
  background: var(--clr-primary);
  color: var(--clr-white);
  padding: 0.375rem 0.75rem;
  letter-spacing: var(--spacing);
  /* nel caso volessi aggiungere margin, per far sì che venga rispettato dal browser, display inline-block */
  display: inline-block;
  font-weight: 700;
  font-size: 0.875rem;
  border: none;
  cursor: pointer;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
  transition: var(--transition);
}

.btn:hover {
  color: var(--clr-primary);
  background: var(--clr-primary-light);
}

.clearfix::after,
.clearfix::before {
  content: "";
  clear: both;
  display: table;
}
/* ora l'elemento successivo a quelli con float ritornano nel loro normale flusso */

.section-title {
  margin-bottom: 2rem;
}

.section-title h3 {
  font-family: var(--ff-secondary);
  color: var(--clr-primary);
}

/* questo section-center verrà dato come classe ai prossimi elementi css */
.section-center {
  padding: 4rem 0;
  /* imposto width per schermi piccoli, poi a parte adatto su grandi */
  width: 85vw;
  margin: 0 auto;
  /* per rimanerlo bello anche se la dimensione schermo aumenta */
  max-width: 1170px;
}
/* partendo da schermi piccoli, la normale width è 85%, con un limite in px su schermi grandi */

@media screen and (min-width: 992px) {
  .screen-center {
    /* più grande su schermi più grandi, la max width resta anche qui */
    width: 95vw;
    padding: 4rem 1rem;
  }
}

/* 
===========
Header 
===========
*/
.header {
  /* min-height deve essere al 100% dello schermo indipendentemente dalla dimensione di questo */
  min-height: 100vh;
  background: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)),
    url(../setup-files-html-css-tea-station-new-design/images/main-bcg.jpeg)
      center/cover no-repeat;
  background-attachment: fixed;
  position: relative;
  /* animation */
  overflow-x: hidden;
  /* overflow serve per nascondere il menu verticale laterale quando si usano gli effetti, dove verrebbe mostrato */
}

.banner {
  /* con text align non si rirova al centro di header */
  text-align: center;
  /* per questo uso position absolute, però con top e left al 50%, le scritte, il banner inizia con l'angolo in alto a sx al centro dello schermo */
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  /* così facendo, il banner è esattamente al centro. questo vale per tutto */
}

/* sto mettendo poco css qui perchè glà ho gli stili globali impostati */
.banner h2 {
  font-family: var(--ff-secondary);
  color: var(--clr-primary);
  /* animation */
  animation: slideFromRight 5s ease-in-out 1;
}

.banner h1 {
  text-transform: uppercase;
  color: var(--clr-white);
  margin-bottom: 2rem;
  margin-top: 1.25rem;
  /* animation */
  animation: slideFromLeft 5s ease-in-out 1;
}

.banner-btn {
  outline: 0.125rem solid var(--clr-primary);
  outline-offset: 0.25rem;
  font-size: 1.25rem;
  padding: 1rem 1.75rem;
  /* animation */
  animation: show 5s linear 1;
}

/* 
===========
Content divider 
===========
*/
.content-divider {
  height: 0.5rem;
  background: linear-gradient(
    to left,
    var(--clr-primary),
    #e9b949,
    var(--clr-primary)
  );
}

/* 
===========
Skills 
===========
*/
.skills {
  background: var(--clr-grey-10);
}

.skill {
  padding: 2.5rem 0;
  text-align: center;
  /* voglio che quando ci vado su col mouse, sulla singola skill, succedano delle cose*/
  transition: var(--transition);
}

.skill-icon {
  /* il margin qui non funziona perchè l'icona è un elemento (?) e quindi il browser non lo rispetta. per sistemare il problema devo mettere: display inline block */
  display: inline-block;
  font-size: 2.5rem;
  margin-bottom: 1.25rem;
  /* voglio che quando ci passo su col mouse la dimensione dell'icona deve cambiare */
  transition: var(--transition);
  color: var(--clr-primary);
}

.skill-text {
  color: var(--clr-grey-5);
  /* il testo comunque è in "spanning", meglio dargli un limite per non fargli prendere troppo spazio */
  max-width: 17rem;
  /* ora si è messo su due righe, il problema è che si è spostato sulla sinistra. la proprietà Text-align assegnata al genitore .skill non vale più,
  quindi lo devo ripiazzare al centro */
  margin: 0 auto;
}

/* transition l'ho già inserita, ora applico ciò che deve succedere se ci passo su col cursore */
.skill:hover {
  background: var(--clr-white);
  /* blur, asse x, asse y, colore */
  box-shadow: 0 2px var(--clr-primary);
}

/* quando vado sul cursore a skill, skill-icon deve:  */
.skill:hover .skill-icon {
  transform: translateY(-5px);
}

/* la sezione skills è allineata ognuna su riga diversa, che è bello da vedere su schermi piccoli, ma non su grandi.
meglio impostarli su un layout a colonne ma che diventi responsive alla dimensione degli schermi.
Tutti su una riga con schermo grande, due-due su medio. Qui serve float */

@media screen and (min-width: 576px) {
  /* voglio impostare due colonne su schermi medi, serve usare float sui singoli article */
  .skill {
    float: left;
    width: 50%;
  }
  /* ora su schermi medi e grandi il layout è su due colonne, su quelli più piccoli è su una */
}

/* schermo grande */
@media screen and (min-width: 1200px) {
  .skill {
    /* metto la width in scala */
    width: 25%;
  }
}

/* CLEARFIX (che è anche una classe su html che ho messo) viene usato sugli elementi float, ovvero al di fuori del normale flusso del codice. il problema dei float è
che l'elemento che andrà a piazzarsi dopo l'ultimo elemento che ha float verrà posizionato senza tenere conto del flussodel floating e questo genera una
incongruenza nel layout
la proprietà CLEAR si occupa di interrompere il flusso generato dalla proprietà float per ripristinare il normale corso dei successivi elementi.
si può abbinare a ::before ed ::after
ho messo clearfix come classe specifica per section perchè la riutilizzerò, sarà una global class -> ritorno a "more global css" */

/* 
===========
About 
===========
*/
.about-img,
.about-info {
  padding: 2rem 0;
}

.about-picture-container {
  background: var(--clr-primary);
  border: 0.5rem solid var(--clr-primary);
  max-width: 30rem;
  /* extra stuff */
  overflow: hidden;
}

/* ora metto gli effetti sull'immagine */
.about-picture {
  transition: var(--transition);
}

.about-picture-container:hover .about-picture {
  /* voglio mostrare il background verde messo sotto l'immagine */
  opacity: 0.5;
  transform: scale(1.2);
  /* l'immagine però esce dal bordo, con scale, fuoriesce dal container, per questo serve aggiungere extra stuff all'elemento genitore, ed ecco perchè è servito
  creare un container prima di aggiungere picture, per mettere il background, limiti di dimensioni che fungono da limite per l'overflow */
}

.about-text {
  /* per evitare che p spanna troppo, si allunghi troppo */
  max-width: 26rem;
  color: var(--clr-grey-5);
}

/* voglio che la sezione about si metta su due colonne / singola riga, su schermi grandi. serve float */
@media screen and (min-width: 992px) {
  .about-img,
  .about-info {
    float: left;
    width: 50%;
    /* ora il problema è che in prossimità dei 992px, le scritte si attaccano all'immagine, non c'è spazio in mezzo. basta un pò di padding */
  }
  .about-info {
    padding-left: 2rem;
  }
  /* i max-width impostati prima impediscono agli elementi di allungarsi o ingrandirsi quando aumenta la dimensione schermo */
}

/* 
===========
PRODUCTS SECTION 
===========
*/
.products {
  background: var(--clr-grey-10);
}

.products article {
  padding: 2rem 0;
}

.product-text {
  color: var(--clr-grey-5);
  /* bisogna dare una max-width al p perchè questo si allunga troppo, così' come per le sezioni già fatte, va sistemato */
  max-width: 26rem;
}

.product {
  margin-bottom: 2rem;
}

.product-img {
  border-radius: var(--radius);
  margin-bottom: 2rem;
  height: 17rem;
  /* l'immagine si distorce con questa height, per sistemare si usa:  */
  object-fit: cover;
  /* adattando diverse dimensioni dello schermo, cover modifica quello che si vede dell'immagine, un po come effetto zoom in out, mantenendo l'height */
}

.product-price {
  color: var(--clr-primary);
}
/* ricordo che di base il progetto lo sto lavorando su schermo piccolo, non intero */

/* ora inizia il float. ricordo che la proprietà clear è già inserita grazie alla classe clearfix sugli elementi a inizio sezione */
/* column layout  */
@media screen and (min-width: 768px) {
  /* prima lavoro sul layout dei prodotti. a 768 px questi saranno su due colonne */
  .product {
    float: left;
    /* ancora non si dispongono su colonne. metto width */
    width: 50%;
    /* però ora non ho spazio tra le sezioni product. aggiungo padding, anche se ci sono altri modi per farlo */
    padding-right: 2rem;
  }
}

/* l'unica cosa da cambiare è la width perchè float così resta e il padding pure non serve */
@media screen and (min-width: 992px) {
  .product {
    /* c'era un capitolo in cui spiegava calcoli da fare per la width in certe situazioni */
    width: 33.3%;
  }
}

@media screen and (min-width: 1200px) {
  /* in schermi grandi voglio che i prodotti stiano affiancati alle info, quindi products-info + products-inventory = layout a 2 colonne */
  .products-info {
    float: left;
    width: 30%;
  }
  .products-inventory {
    /* questo contiene tutti i product che già sono messi su layout a 3 colonne grazie al precedente query */
    float: left;
    width: 70%;
  }
  /* creo un pò di spazio laterale tra gli elementi */
  .product {
    /* rimuovo il margine prima di tutto */
    margin-bottom: 0;
    /* metto il padding poi */
    padding: 0 1rem;
  }
}

/* 
===========
SERVICES SECTION 
===========
*/
/* non serve lavorare col titolo perchè già è stilato con la sua global class, ma aggiungo solo dei margini */
.services-title {
  margin-top: 4rem;
  margin-bottom: -4rem;
  text-align: center;
}

/* section-center ha già delle proprietà, motivo per cui c'era quello spazio tra title e center */
.service-card {
  margin: 2rem 0;
  background: var(--clr-grey-10);
  /* non si vedrà il radius sul lato superiore perchè c'è l'immagine, per cui a questa va messo radius solo su angolo alto a sx e dx */
  border-radius: var(--radius);
  /* blur, x, y */
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  transition: var(--transition);
}

.service-card:hover {
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  /* il cambiamento è istantaneo perchè non c'è ancora transition, ora lo aggiungo, sulla classe precedente */
  /* voglio anche aumentare la dimensione della carta quando ci passo sopra, con scale */
  transform: scale(1.02);
}

/* ora lavoro sulle singole immagini */
.service-img {
  height: 17rem;
  object-fit: cover;
  /* devo aggiungere border radius, ma solo agli angoli in alto, quindi non posso usare border-radius, che li prende tutti */
  border-top-left-radius: var(--radius);
  border-top-right-radius: var(--radius);
}

.service-info {
  text-align: center;
  padding: 3rem 1rem 2.5rem 1rem;
}

.service-info p {
  max-width: 20rem;
  color: var(--clr-grey-5);
  margin: 0 auto;
}

/* ricordo che sto lavorando su schermo piccolo come base */

.service-btn {
  font-size: 0.75rem;
  text-transform: uppercase;
  padding: 0.375rem 0.5rem;
  border-radius: var(--radius);
  font-weight: 400;
  margin-top: 1.25rem;
}

/* ora impostiamo le colonne */
/* schermo medio -> layout su due colonne */
@media screen and (min-width: 768px) {
  .service-card {
    float: left;
    /* 100% = 1 card / 50% = 2 cards / a noi serve 100% 45% e dopo 90%*/
    /* invece che usare 50% uso il 45% + il 5% ed è qui che entra in gioco il margin */
    width: 45%;
    margin-right: 5%;
    /* cosy per il layout a 2 colonne ho il 50%, 45width + 5margin */
  }
}

/* layout su 3 colonne per schermo grande */
@media screen and (min-width: 992px) {
  .service-card {
    /* float è già stato usato e funziona ancora perchè ho usato min width prima */
    /* il massimo è 100%, ma ho 3 elementi da mettere in colonna, quindi 30%, e il margin sarà di 3.333%, così il totale sarà 100% per tre cards
    (30% * 3) + (3.333% * 3) = 99.999% per essere precisi */
    width: 30%;
    margin-right: 3.333%;
  }
}

/* e ora pensiamo alle ICONS */
.service-img-container {
  position: relative;
}

.service-icon {
  position: absolute;
  /* voglio piazzarla al centro della card */
  left: 50%;
  bottom: 0;
  /* ora sta al centro e sopra all'img */
  font-size: 2rem;
  color: var(--clr-primary);
  background-color: var(--clr-primary-light);
  /* con un pò di padding sarà possibile rendere il background tondo */
  padding: 0.25rem 0.6rem;
  border-radius: 50%;
  /* anche se ho messo left 50%, l'icona non sta ora proprio al centro della card, è a destra. ricordo si può usare transform-translate come per il .banner */
  /* voglio anche abbassarla un pò, metà che copre l'immagine e l'altra metà sulla card */
  /* ricordo asse x e y */
  transform: translate(-50%, 50%);
  border: 0.375rem solid var(--clr-grey-10);
}

/* 
===========
CONTACT SECTION 
===========
*/

.contact {
  background: var(--clr-grey-10);
}

/* margin per schermi piccoli */
.contact-form,
.contact-info {
  margin: 1rem 0;
}

.contact-item {
  margin-bottom: 1.75rem;
}

.contact-title {
  color: var(--clr-primary);
  font-weight: 400;
}

.contact-text {
  text-transform: uppercase;
}

.contact-form {
  background: var(--clr-white);
  border-radius: var(--radius);
  text-align: center;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  transition: var(--transition);
  /* per evitare form spanning  */
  max-width: 35rem;
}

.contact-form:hover {
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

.contact-form h3 {
  padding-top: 1.25rem;
  color: var(--clr-grey-5);
}

.form-group {
  /* tutti gli input */
  padding: 1rem 1.5rem;
}

.form-control {
  /* tutti i form devono iniziare su una nuova riga */
  display: block;
  width: 100%;
  /* grazie al padding di form-group, mettere qui la width al 100% evita che questi elementi si allunghino per tutta la loro sezione, cosa che invece si vuole con btn */
  /* ora metto un pò di spazio tra il placeholder e la casella*/
  padding: 0.75rem 1rem;
  border: none;
  /* metto un pò di distanza tra gli input */
  margin-bottom: 1.25rem;
  background: var(--clr-grey-10);
  border-radius: var(--radius);
  text-transform: uppercase;
  letter-spacing: var(--spacing);
}

/* come controllare il placeholder dei form */
.form-control::placeholder {
  font-family: var(--ff-primary);
  color: var(--clr-grey-1);
  /* li reinserisco per essere sicura che vengano presi */
  text-transform: uppercase;
  letter-spacing: var(--spacing);
}

/* voglio che btn si allunghi in basso su tutto il form, da sinistra a destra */
.submit-btn {
  display: block;
  width: 100%;
  border-bottom-left-radius: var(--radius);
  border-bottom-right-radius: var(--radius);
  padding: 1rem;
}

/* ora tutto questo è stato impostato su una colonna, per schermi piccoli, e così rimane per tutti gli schermi */
/* imposto su due colonne */
@media screen and (min-width: 992px) {
  /* devo selezionare entrambe le sezioni */
  .contact-form,
  .contact-info {
    float: left;
    width: 50%;
  }
  /* c'è già abbastanza spazio tra le due colonne */
}

/* 
===========
FOOTER SECTION 
===========
*/
.footer {
  background: #222;
  text-align: center;
}

.social-icon {
  color: var(--clr-white);
  font-size: 1.5rem;
  margin-right: 1rem;
  transition: var(--transition);
}

.social-icon:hover {
  color: var(--clr-primary);
}

.footer-text {
  margin-top: 1.25rem;
  text-transform: uppercase;
  color: var(--clr-white);
  font-weight: 400;
}

.company {
  color: var(--clr-primary);
}

/* 
===========
NAV BUTTON QUELLO CON LE 3 BARRETTE
===========
*/
.nav-btn {
  position: fixed;
  /* ora il btn sparisce, bisogna dargli delle coordinate */
  top: 5%;
  left: 5%;
  font-size: 2.5rem;
  color: var(--clr-primary);
  /* mettere z-index perchè ancora non si vede, è coperto dalla background img che fa da sfondo */
  z-index: 1;
  /* controllo che si veda sempre e ovunque altrimenti metto il numero più alto */
  cursor: pointer;
  /* animation */
  animation: bounce 2s ease infinite;
}

/* navbar */
.navbar {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: var(--clr-grey-10);
  z-index: 2;
  /* ora sta messo tutto strano, spamma su tutta la pagina.  */
  /* seconda opzione: metto width ed height pittosto che fare come sopra */
  /* width: 100%;
  height: 100%; */
  /* ora però occupa ancora tutto lo spazio */
  box-shadow: 2px 0 4px rgba(0, 0, 0, 0.2);
  /* hide navbar */
  transform: translateX(-100%);
  /* dato che in schermo piccolo la navbar sta top 0 e left 0 mettere questa transazione non è impostante perchè tanto occupa tutto lo schermo,
  ma su uno grande no. così la navbar si trasporterà al 100% a sinistra */
  /* dopo aver messo transform translate, la navbar non c'è più, ci sta il btn a righe
  ora serve showNav */
  transition: var(--transition);
}

.showNav {
  transform: translate(0);
  /* il valore è 0 perchè ora si deve riposizionare al suo punto di partenza */
  /* per rendere questa classe dinamica serve aggiungere JS. aggiungo questa classe a nav in html, ricordo che già c'è il foglio di js ed è linkato */
  /* ecco, ora se clicco sui btn la navbar si apre e si chiude */
}
/* non c'è nessuna transazione quindi questa si apre e chiude "sparendo" -> aggiungo transition in navbar */

/* questa è la crocetta */
.navbar-header {
  text-align: right;
  padding-right: 1rem;
}

/* e anche questo influisce sulla crocetta */
.nav-close {
  font-size: 2.5rem;
  cursor: pointer;
  color: #f29c9c;
  /* transition -> for hovering over the nav-close */
  transition: var(--transition);
}

.nav-close:hover {
  color: #bb2525;
}

/* perchè non si vedono i pallini della lista? perchè c'è margin 0 e questi stanno a sinistra oltre lo schermo */
.nav-items {
  list-style-type: none;
}

.nav-link {
  /* i link sono di default display: inline */
  display: block;
  font-size: 1.5rem;
  padding: 0.25rem 1rem;
  text-transform: uppercase;
  letter-spacing: var(--spacing);
  color: var(--clr-grey-5);
  transition: var(--transition);
}

.nav-link:hover {
  background: var(--clr-primary-light);
  color: var(--clr-primary);
  padding-left: 1.5rem;
  border-left: 0.25rem solid var(--clr-primary);
}

/* quindi, per gli schermi piccoli questa sezione coprirà tutto lo schermo, grazie ai valori 0 in .navbar */

/* dimensione per gli schermi più grandi */
@media screen and (min-width: 768px) {
  .navbar {
    /* il 30% dello schermo */
    width: 30vw;
    max-width: 20rem;
  }
}
/* we're just going to use 30 percent or the max width of 20rem. */

/* ora serve javascript per nascondere la nav quando clicco sul btn e aprirla. quando raggiungo il sito, questa deve essere chiusa di default
ritorno su .navbar */

/* 
===========
ANIMATION
per il btn banner si usa scale all'infinito. per le scritte serve l'effetto slide
===========
*/
/* btn */
@keyframes bounce {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(2);
  }
  100% {
    transform: scale(1);
  }
}

/* parte in corsivo */
@keyframes slideFromRight {
  0% {
    transform: translateX(100px);
    opacity: 0;
  }
  50% {
    transform: translateX(-200px);
    opacity: 0.5;
  }
  75% {
    transform: translateX(50px);
    opacity: 0.75;
  }
  100% {
    transform: translateX(0px);
    opacity: 1;
  }
}

/* titolo principale */
@keyframes slideFromLeft {
  0% {
    transform: translateX(-1000px);
    opacity: 0;
  }
  50% {
    transform: translateX(200px);
    opacity: 0.5;
  }
  75% {
    transform: translateX(-50px);
    opacity: 0.75;
  }
  100% {
    transform: translateX(0px);
    opacity: 1;
  }
}

/* btn */
@keyframes show {
  0% {
    transform: scale(1.5);
    opacity: 0;
  }
  50% {
    transform: scale(2);
    opacity: 0.5;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

/* e questo è fatto, ora creo il resto delle pagine */
